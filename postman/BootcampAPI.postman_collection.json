{
	"info": {
		"_postman_id": "7662d1a1-3fba-4f23-85bf-8eb804461712",
		"name": "DevCamper API",
		"description": "Backend API for the DevCamper application to manage bootcamps, courses, reviews, users and auth.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "41355372"
	},
	"item": [
		{
			"name": "Bootcamps",
			"item": [
				{
					"name": "Create Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Test Bootcamp\",\n    \"description\": \"ModernTech has one goal, and that is to make you a rockstar developer and/or designer with a six figure salary. We teach both development and UI/UX\",\n    \"website\": \"https://moderntech.com\",\n    \"phone\": \"(222) 222-2222\",\n    \"email\": \"enroll@moderntech.com\",\n    \"address\": \"220 Pawtucket St, Lowell, MA 01854\",\n    \"careers\": [\n        \"Web Development\",\n        \"UI/UX\",\n        \"Mobile Development\"\n    ],\n    \"housing\": false,\n    \"jobAssistance\": true,\n    \"jobGuarantee\": false,\n    \"acceptGi\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							]
						},
						"description": "## Add Bootcamp\n\nThis endpoint allows users to add a new bootcamp to the system.\n\n### Request Method\n\n- **POST**\n    \n\n### Endpoint\n\n- `{{URL}}/api/v1/bootcamps`\n    \n\n### Request Parameters\n\nThe request body should contain the necessary parameters to create a new bootcamp. Each parameter is a string value and should be included in the form-data or x-www-form-urlencoded format.\n\n### Expected Response\n\nOn a successful request, the API will return a JSON response with the following structure:\n\n- **success**: A boolean indicating the success of the operation.\n    \n- **message**: A string that may contain additional information about the operation (can be empty).\n    \n\n### Response Example\n\n``` json\n{\n    \"success\": true,\n    \"message\": \"\"\n}\n\n ```\n\nEnsure that all required parameters are included in the request to avoid errors."
					},
					"response": []
				},
				{
					"name": "Get All Bootcamps",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps?select=description&sort=-name&page=1&limit=1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps"
							],
							"query": [
								{
									"key": "select",
									"value": "description"
								},
								{
									"key": "sort",
									"value": "-name"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "1"
								}
							]
						},
						"description": "## Get Bootcamps\n\nThis endpoint retrieves a list of bootcamps available in the system. It is a `GET` request and does not require any parameters in the request body.\n\n### Request Parameters\n\n- **No request parameters are required for this endpoint.**\n    \n\n### Response\n\nUpon a successful request, the server will return a JSON response containing a list of bootcamps. The response structure typically includes the following fields:\n\n- **id**: Unique identifier for the bootcamp.\n    \n- **name**: Name of the bootcamp.\n    \n- **description**: Brief description of what the bootcamp offers.\n    \n- **location**: The geographical location of the bootcamp.\n    \n- **website**: URL for more information about the bootcamp.\n    \n\n### Notes\n\n- Ensure that you have the necessary permissions to access this endpoint.\n    \n- The response will be an array of bootcamp objects, and the structure may vary based on the data available in the system.\n    \n- If no bootcamps are available, an empty array will be returned.\n    \n\nMake sure to handle any potential errors as per the API's error response guidelines."
					},
					"response": []
				},
				{
					"name": "Get Bootcamps By Distance",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/radius/02118/10",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"radius",
								"02118",
								"10"
							]
						},
						"description": "## Get Bootcamps Within a Specified Radius\n\nThis endpoint retrieves a list of bootcamps available within a specified radius from a given zipcode. It is a `GET` request that requires query parameters to define the search criteria.\n\n### Request Parameters\n\n- **zipcode**: (string) The postal code from which to search for bootcamps. In this example, the value is `02118`.\n    \n- **distance**: (integer) The radius in miles within which to search for bootcamps. In this example, the value is `10`.\n    \n\n### Response\n\nUpon a successful request, the server will return a JSON response containing a list of bootcamps. The response structure typically includes the following fields:\n\n- **id**: Unique identifier for the bootcamp.\n    \n- **name**: Name of the bootcamp.\n    \n- **description**: Brief description of what the bootcamp offers.\n    \n- **location**: The geographical location of the bootcamp.\n    \n- **website**: URL for more information about the bootcamp.\n    \n\n### Notes\n\n- Ensure that you have the necessary permissions to access this endpoint.\n    \n- The response will be an array of bootcamp objects, and the structure may vary based on the data available in the system.\n    \n- If no bootcamps are available within the specified radius, an empty array will be returned.\n    \n\nMake sure to handle any potential errors as per the API's error response guidelines."
					},
					"response": []
				},
				{
					"name": "Get Single Bootcamp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/688f3a0deac037f817c144f2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"688f3a0deac037f817c144f2"
							]
						},
						"description": "## Get Bootcamp Details\n\nThis endpoint retrieves detailed information about a specific bootcamp identified by its unique ID.\n\n### Request\n\n- **Method**: GET\n    \n- **Endpoint**: `{{URL}}/api/v1/bootcamps/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (required): The unique identifier of the bootcamp you want to retrieve. In this example, the ID is `1`.\n        \n\n### Response\n\nUpon a successful request, the server responds with a JSON object containing the details of the specified bootcamp. The structure of the response typically includes:\n\n- `id`: The unique identifier of the bootcamp.\n    \n- `name`: The name of the bootcamp.\n    \n- `description`: A brief description of the bootcamp.\n    \n- `location`: The geographical location of the bootcamp.\n    \n- `website`: The official website of the bootcamp.\n    \n- `createdAt`: The timestamp of when the bootcamp was created.\n    \n- `updatedAt`: The timestamp of the last update to the bootcamp information.\n    \n\n### Example Response\n\n``` json\n{\n  \"id\": 1,\n  \"name\": \"Example Bootcamp\",\n  \"description\": \"An example bootcamp for learning.\",\n  \"location\": \"Online\",\n  \"website\": \"https://examplebootcamp.com\",\n  \"createdAt\": \"2023-01-01T00:00:00Z\",\n  \"updatedAt\": \"2023-01-10T00:00:00Z\"\n}\n\n ```\n\nThis endpoint is useful for users who want to obtain specific details about a bootcamp for further actions or information."
					},
					"response": []
				},
				{
					"name": "Update Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"housing\": true,\n    \"careers\": [\n        \"Web Development\",\n        \"Business\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/688f3a0deac037f817c144f2",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"688f3a0deac037f817c144f2"
							]
						},
						"description": "## Update Bootcamp Details\n\nThis endpoint allows users to update the details of a specific bootcamp identified by its unique ID. In this case, the bootcamp with ID `1` is targeted for the update.\n\n### Request Format\n\n- **Method**: PUT\n    \n- **Endpoint**: `{{URL}}/api/v1/bootcamps/1`\n    \n- **Request Body**: The request must include the following parameters in the body, formatted as `application/json`:\n    \n    - `name` (string): The name of the bootcamp.\n        \n    - `description` (string): A detailed description of the bootcamp.\n        \n    - `website` (string): The URL of the bootcamp's website.\n        \n    - `phone` (string): Contact phone number for the bootcamp.\n        \n    - `email` (string): Contact email address for the bootcamp.\n        \n    - `location` (object): An object containing the address details of the bootcamp.\n        \n        - `address` (string): The street address.\n            \n        - `city` (string): The city where the bootcamp is located.\n            \n        - `state` (string): The state where the bootcamp is located.\n            \n        - `zip` (string): The postal code.\n            \n        - `country` (string): The country where the bootcamp is located.\n            \n\n### Response Structure\n\nUpon a successful update, the server will respond with a status code of `200 OK` and a JSON object containing the updated bootcamp details:\n\n- `success` (boolean): Indicates whether the update was successful.\n    \n- `data` (object): Contains the updated bootcamp information, including all the fields provided in the request.\n    \n\n### Example Response\n\n``` json\n{\n  \"success\": true,\n  \"data\": {\n    \"id\": 1,\n    \"name\": \"Updated Bootcamp Name\",\n    \"description\": \"Updated detailed description.\",\n    \"website\": \"https://updated-bootcamp.com\",\n    \"phone\": \"123-456-7890\",\n    \"email\": \"contact@updated-bootcamp.com\",\n    \"location\": {\n      \"address\": \"123 Updated St\",\n      \"city\": \"Updated City\",\n      \"state\": \"Updated State\",\n      \"zip\": \"12345\",\n      \"country\": \"Updated Country\"\n    }\n  }\n}\n\n ```\n\nThis endpoint is crucial for managing bootcamp information, allowing updates to ensure that users have the most current details."
					},
					"response": []
				},
				{
					"name": "Upload Photo",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"housing\": true,\n    \"careers\": [\n        \"Web Development\",\n        \"Business\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/photo",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"photo"
							]
						},
						"description": "Upload bootcamp photo"
					},
					"response": []
				},
				{
					"name": "Delete Bootcamp",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/68949eb3144e070baceb45cb",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"68949eb3144e070baceb45cb"
							]
						},
						"description": "## DELETE Bootcamp\n\nThis endpoint allows users to delete a specific bootcamp identified by its unique ID. It is a part of the bootcamp management system, enabling the removal of bootcamp records from the database.\n\n### Request\n\n- **Method**: DELETE\n    \n- **Endpoint**: `{{URL}}/api/v1/bootcamps/{id}`\n    \n- **Path Parameter**:\n    \n    - `id` (required): The unique identifier of the bootcamp to be deleted. In this example, the ID is `1`.\n        \n\n### Response\n\nUpon successful deletion of the bootcamp, the API will return a response indicating the result of the operation. The typical structure of the response will include:\n\n- **Status Code**:\n    \n    - `204 No Content`: Indicates that the bootcamp was successfully deleted and there is no additional content to return.\n        \n\nIn case of an error, the response may include an appropriate error message and status code detailing the issue encountered during the deletion process.\n\n### Example Response\n\n- **204 No Content**: The request was successful, and the bootcamp has been deleted.\n    \n- **404 Not Found**: The specified bootcamp ID does not exist.\n    \n- **400 Bad Request**: The request was malformed or invalid.\n    \n\nThis endpoint is crucial for maintaining the integrity and cleanliness of the bootcamp records in the system."
					},
					"response": []
				}
			],
			"description": "CRUD for Bootcamps"
		},
		{
			"name": "Courses",
			"item": [
				{
					"name": "Get All Courses",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Courses For Bootcamp",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"courses"
							]
						},
						"description": "Get the specific course for a bootcamp"
					},
					"response": []
				},
				{
					"name": "Get Single Course",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/courses/5d725c84c4ded7bcb480eaa0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725c84c4ded7bcb480eaa0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Test Development\",\n    \"description\": \"This course will provide you with all of the essentials to become a successful frontend web developer. You will learn to master HTML, CSS and front end JavaScript, along with tools like Git, VSCode and front end frameworks like Vue\",\n    \"weeks\": 8,\n    \"tuition\": 8000,\n    \"minimumSkill\": \"beginner\",\n    \"scholarhipsAvailable\": true\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/courses",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"courses"
							]
						},
						"description": "Create a course on a bootcamp"
					},
					"response": []
				},
				{
					"name": "Update Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Name\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/courses/5d725c84c4ded7bcb480eaa0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725c84c4ded7bcb480eaa0"
							]
						},
						"description": "Updates the course"
					},
					"response": []
				},
				{
					"name": "Delete Course",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/courses/5d725a4a7b292f5f8ceff789",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"courses",
								"5d725a4a7b292f5f8ceff789"
							]
						},
						"description": "Delete a course"
					},
					"response": []
				}
			],
			"description": "CRUD for courses"
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						},
						"description": "Get all the users if you're admin"
					},
					"response": []
				},
				{
					"name": "Create User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nate Smith\",\n    \"email\": \"nate@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/5c8a1d5b0190b214360dc037",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"5c8a1d5b0190b214360dc037"
							]
						},
						"description": "Get a single user"
					},
					"response": []
				},
				{
					"name": "Update User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Nate Johnson\",\n    \"email\": \"nate@gmail.com\",\n    \"password\": \"123456\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/users/6895c6aa1859ce4b2e07e009",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"6895c6aa1859ce4b2e07e009"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/users/6895c6aa1859ce4b2e07e009",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"users",
								"6895c6aa1859ce4b2e07e009"
							]
						}
					},
					"response": []
				}
			],
			"description": "CRUD on the users if you're an admin user"
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"test@gmail.com\",\n    \"password\": \"Testing123\",\n    \"role\": \"publisher\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/register",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"register"
							]
						},
						"description": "Adding a user"
					},
					"response": []
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test1@gmail.com\",\n    \"password\": \"Testing123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/login",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Current User via Token",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"me"
							]
						},
						"description": "Get the the current user thats logged in"
					},
					"response": []
				},
				{
					"name": "Forget Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john@gmail.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/forgotpassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"forgotpassword"
							]
						},
						"description": "Request to reset password"
					},
					"response": []
				},
				{
					"name": "Reset Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"password\": \"Test123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/resetpassword/57cd0524944630865296ee36814216333556e8dd",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"resetpassword",
								"57cd0524944630865296ee36814216333556e8dd"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"test1@gmail.com\",\n    \"name\": \"John Smith\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatedetails",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatedetails"
							]
						},
						"description": "Update users name and email"
					},
					"response": []
				},
				{
					"name": "Update User Password",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.environment.set(\"TOKEN\", pm.response.json().token)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"Test123\",\n    \"newPassword\": \"Test124\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/auth/updatepassword",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"updatepassword"
							]
						},
						"description": "Send in the body current and new password to update the current users password"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/api/v1/auth/logout",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"auth",
								"logout"
							]
						},
						"description": "Logout and clears cookie"
					},
					"response": []
				}
			],
			"description": "Routes for user authentication i.e. login, register and password reset"
		},
		{
			"name": "Reviews",
			"item": [
				{
					"name": "Get Reviews For Bootcamp",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Reviews",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Review",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5d7a514b5d2c12c7449be021",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5d7a514b5d2c12c7449be021"
							]
						},
						"description": "Get a single review using it's ID"
					},
					"response": []
				},
				{
					"name": "Create A Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Learned a ton!\",\n    \"text\": \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec viverra feugiat mauris id viverra. Duis luctus ex sed facilisis ultrices. Curabitur scelerisque bibendum ligula, quis condimentum libero fermentum in. Aenean erat erat, aliquam in purus a, rhoncus hendrerit tellus. Donec accumsan justo in felis consequat sollicitudin. Fusce luctus mattis nunc vitae maximus. Curabitur semper felis eu magna laoreet scelerisque\",\n    \"rating\": \"8\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/bootcamps/5d713a66ec8f2b88b8f830b8/reviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"bootcamps",
								"5d713a66ec8f2b88b8f830b8",
								"reviews"
							]
						},
						"description": "Create a review on a bootcamp"
					},
					"response": []
				},
				{
					"name": "Update Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reviews/5d7a514b5d2c12c7449be021",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"5d7a514b5d2c12c7449be021"
							]
						},
						"description": "Update a single review you created"
					},
					"response": []
				},
				{
					"name": "Delete Review",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{TOKEN}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": "JSON Type",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"New Title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/api/v1/reviews/6895d235b78b95179c02e026",
							"host": [
								"{{URL}}"
							],
							"path": [
								"api",
								"v1",
								"reviews",
								"6895d235b78b95179c02e026"
							]
						},
						"description": "Delete a review you created"
					},
					"response": []
				}
			],
			"description": "CRUD and endpoints for reviews on bootcamps"
		}
	]
}